// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [vector]
}

model SourceCodeEmbedding {
    id               String                      @id @default(cuid())
    sourceCode       String
    summaryEmbedding Unsupported("vector(768)")?
    summary          String
    projectId        String
    fileName         String
    project          Projects                    @relation(fields: [projectId], references: [id])
}

model Question {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    question  String
    answer    String
    projectId String
    project   Projects @relation(fields: [projectId], references: [id])
    userId    String
    user      user     @relation(fields: [userId], references: [id])
}

model user {
    id        String   @id @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    imageURl  String?
    firstName String?
    lastName  String?

    email String @unique

    credits       Int             @default(150)
    UserToProject UserToProject[]
    Question      Question[]
}

model Projects {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectName String
    githubUrl   String

    deletedAt           DateTime?
    UserToProject       UserToProject[]
    Commit              Commit[]
    SourceCodeEmbedding SourceCodeEmbedding[]
    Question            Question[]
}

model UserToProject {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String
    projectId String
    User      user     @relation(fields: [userId], references: [id])
    project   Projects @relation(fields: [projectId], references: [id])

    @@unique([userId, projectId])
}

model Commit {
    id        String   @id @unique @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project   Projects @relation(fields: [projectId], references: [id])

    commitMessage      String
    commitHash         String
    commitDate         DateTime
    commitAuthorName   String
    commitAuthorAvatar String

    //Ai generated 
    summary String
}
